
/******************************************************************************
  Project #3 skeleton
******************************************************************************/

#include <Sim.h>

void circuits( SD, Signal, Signal, Signal, Signal, 
  Signal, Signal, Signal, Signal, Signal, Signal, Signal, Signal );


/******************************************************************************
  Function "simnet"   -- test bed for student circuits
******************************************************************************/

void simnet()
{
  Signal w, x, y, z, Present, a, b, c, d, e, f, g;

    Signal Strobe (1);
    Signal ResetA (1);
    Signal ResetB (1);
    Signal Output (4);
//Code to generate four input signals

    Pulser ((SD("1a"), "r--reset Counter"), ResetA, 'r', 10000);
    Pulser ((SD("2a"), "s--Strobe Counter"), Strobe, 's', 10000);

    Not (SD("1b"), ResetA, ResetB);

    Counter((SD("1c-2c"), "4 bit Counter"), (ResetB, Strobe), (w, x, y, z));

  circuits (SD("1d-4d"), w, x, y, z, Present, a, b, c, d, e, f, g);    
    Probe ((SD("1e-1f"), "P"), Present);
    Probe ((SD("2e-2f"), "a"), a);
    Probe ((SD("3f-4f"), "b"), b);
    Probe ((SD("6f-7f"), "c"), c);
    Probe ((SD("8e-8f"), "d"), d);
    Probe ((SD("6e-7e"), "e"), e);
    Probe ((SD("3e-4e"), "f"), f);
    Probe ((SD("5e-5f"), "g"), g);
//Code to display the eight output signals
}


/******************************************************************************
  Function "circuits" -- implementation of student circuits

  Do not alter the interface -- function "circuits" must receive four
  signals as inputs and return eight signals as outputs.
******************************************************************************/

void circuits( SD sd, Signal w, Signal x, Signal y, Signal z, 
  Signal Present, Signal a, Signal b, Signal c, Signal d, Signal e,
  Signal f, Signal g )    
{
  Module( (sd, "circuits"), (w, x, y, z), (Present, a, b, c, d, e, f, g) );
    Signal notw, noty, notx, notz;
    Signal and1, and2, and3, and4, and5, and6, and7, and8, and9, and10;
    Signal and11, and12;

    Not (SD(sd, "1a"), w, notw);
    Not (SD(sd, "1b"), x, notx);
    Not (SD(sd, "1c"), y, noty);
    Not (SD(sd, "1d"), z, notz);

    And (SD(sd, "2a"), (notw, noty, notz), and1);
    And (SD(sd, "2b"), (notw, x, noty), and2);
    And (SD(sd, "2c"), (notw, x, notz), and3);
    And (SD(sd, "2d"), (w, notx, noty), and4);
    And (SD(sd, "2e"), (w, notx, notz), and5);
    And (SD(sd, "2f"), (noty, notz), and6);
    And (SD(sd, "2g"), (One, One), and7);
    And (SD(sd, "2h"), (notx, noty, notz), and8);
    And (SD(sd, "2i"), (notw, z), and9);
    And (SD(sd, "2j"), (notw, y), and10);
    And (SD(sd, "2k"), (notx, notz), and11);
    And (SD(sd, "2l"), (w, noty), and12);

    Or (SD(sd, "1e-1f"), (and1, and2, and3, and4, and5), Present);
    Or (SD(sd, "2e-2f"), (notx, z), a);
    Or (SD(sd, "3f-4f"), (and6, w), b);
    Or (SD(sd, "6f-7f"), (and7), c); 
    Or (SD(sd, "8e-8f"), (and8, and9, and10), d);
    Or (SD(sd, "6e-7e"), (and11, y), e);
    Or (SD(sd, "3e-4e"), (and7), f);
    Or (SD(sd, "5e-5f"), (x, w), g);

 // Replace with circuit implementation (Not, And, Or gates)
}
